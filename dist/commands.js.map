{"version":3,"file":"commands.js","mappings":";;;;;AAAA;AACA;AACA;AACA;;AAEA;;AAEAA,MAAM,CAACC,OAAO,CAAC,YAAM;EACnB;EACAD,MAAM,CAACE,OAAO,CAACC,SAAS,CAAC,YAAY,EAAE,UAAUC,KAAK,EAAE;IACtDJ,MAAM,CAACK,OAAO,CAACC,EAAE,CAACC,kBAAkB,CAClC,2CAA2C,EAC3C;MAAEC,MAAM,EAAE,EAAE;MAAEC,KAAK,EAAE;IAAG,CAAC,EACzB,UAACC,MAAM,EAAK;MACV,IAAIA,MAAM,CAACC,MAAM,KAAKX,MAAM,CAACY,iBAAiB,CAACC,SAAS,EAAE;QACxD,IAAMC,MAAM,GAAGJ,MAAM,CAACK,KAAK;QAC3BD,MAAM,CAACE,eAAe,CAAChB,MAAM,CAACiB,SAAS,CAACC,qBAAqB,EAAE,UAACC,GAAG,EAAK;UACtEC,OAAO,CAACC,GAAG,CAAC,uBAAuB,EAAEF,GAAG,CAACG,OAAO,CAAC;UACjDR,MAAM,CAACS,KAAK,CAAC,CAAC;QAChB,CAAC,CAAC;MACJ;IACF,CACF,CAAC;IACDnB,KAAK,CAACoB,SAAS,CAAC,CAAC;EACnB,CAAC,CAAC;AACJ,CAAC,CAAC;;AAEF;AACA;AACA;AACA;AACA,SAASC,MAAMA,CAACrB,KAAK,EAAE;EACrB;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;AAAA;;AAGF;AACAJ,MAAM,CAACE,OAAO,CAACC,SAAS,CAAC,QAAQ,EAAEsB,MAAM,CAAC,C","sources":["webpack://office-addin-taskpane-js/./src/commands/commands.js"],"sourcesContent":["/*\n * Copyright (c) Microsoft Corporation. All rights reserved. Licensed under the MIT license.\n * See LICENSE in the project root for license information.\n */\n\n/* global Office */\n\nOffice.onReady(() => {\n  // If needed, Office.js is ready to be called.\n  Office.actions.associate(\"openDialog\", function (event) {\n    Office.context.ui.displayDialogAsync(\n      \"https://localhost:3000/mantis-dialog.html\",\n      { height: 50, width: 50 },\n      (result) => {\n        if (result.status === Office.AsyncResultStatus.Succeeded) {\n          const dialog = result.value;\n          dialog.addEventHandler(Office.EventType.DialogMessageReceived, (arg) => {\n            console.log(\"Received from dialog:\", arg.message);\n            dialog.close();\n          });\n        }\n      }\n    );\n    event.completed();\n  });\n});\n\n/**\n * Shows a notification when the add-in command is executed.\n * @param event {Office.AddinCommands.Event}\n */\nfunction action(event) {\n  // if (!Office.context.mailbox.item.notificationMessages) {\n  //   console.error(\"NotificationMessages API not available in this context (likely Read mode).\");\n  //   event.completed();\n  //   return;\n  // }\n  // const message = {\n  //   type: Office.MailboxEnums.ItemNotificationMessageType.InformationalMessage,\n  //   message: \"Performed action.\",\n  //   icon: \"Icon.80x80\",\n  //   persistent: true,\n  // };\n  // Office.context.mailbox.item.notificationMessages.replaceAsync(\n  //   \"ActionPerformanceNotification\",\n  //   message\n  // );\n  // Be sure to indicate when the add-in command function is complete.\n  // event.completed();\n}\n\n// Register the function with Office.\nOffice.actions.associate(\"action\", action);\n"],"names":["Office","onReady","actions","associate","event","context","ui","displayDialogAsync","height","width","result","status","AsyncResultStatus","Succeeded","dialog","value","addEventHandler","EventType","DialogMessageReceived","arg","console","log","message","close","completed","action"],"sourceRoot":""}